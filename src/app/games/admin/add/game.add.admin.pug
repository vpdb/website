include ../../../template/_mixins
include ./game.add.mixins.pug

.row.row--fullheight
	.col-sm-9.col--main
		h1.h--primary add new game
		hr
		p Note that a game is completely decoupled from its releases. Data appearing in here is common to all releases
			| that are linked to that game, but kept as a separate and independent data set.

		form(role="form")

			+title('1. Enter Title')

			//-----------------------------------------------------------------
			h1 2. Origin
			hr
			p If you’ve created the game by yourself, it’s an original game. I’ve you built a game that exists in real
				| life, it’s called a recreation. Recreations must be on IPDB.org.

			.text-center.padder-top
				.radio-inline.radio--lg
					label
						input.input-lg(type="radio", name="origin", value="recreation", ng-model="vm.game.origin")
						span: b Recreation

				.radio-inline.radio--lg
					label
						input(type="radio", name="origin", value="originalGame", ng-model="vm.game.origin")
						span: b Original Game

			.clearfix
			h1 3. Game Info
			hr

			//- form for recreations
			//-----------------------------------------------------------------
			p(ng-show="vm.game.origin == 'recreation'") Search IPDB.org and locate the IPDB number. Paste it into the
				| field below and hit "fetch". If the correct game info is displayed, you're done in here.

			.form-horizontal(ng-show="vm.game.origin == 'recreation'")
				.form-group(ng-class="{ error: vm.errors['ipdb.number'] }")
					label.col-sm-3.control-label(for="ipdb-url") IPDB
					.col-sm-6
						input#ipdb-url.form-control(type="text", ng-model="vm.game.ipdbUrl", placeholder="URL or Number", on-enter="vm.refresh()")
						a.a--lighter#ipdbLink(href="http://www.ipdb.org/search.pl?any={{ vm.game.title | escape }}&search=Search+Database&searchtype=quick", target="_blank")
							+icon('external-link').small.shift-up.space-right
							| Search title on IPDB.org
					.col-sm-3
						button#ipdb-fetch.btn.btn-default.btn--width-med.pull-right(ng-click="vm.refresh()")
							+icon('refresh').space-right
							| Fetch

				.alert.alert-danger.alert--shifted-up(ng-show="vm.errors['ipdb.number']")
					.row
						.col-sm-9.col-sm-offset-3
							+icon('warning').shift-up.space-right
							| {{ vm.errors['ipdb.number'] }}

				.form-group(ng-class="{ error: vm.errors.id }")
					label.col-sm-3.control-label(for="game-id-1") Game ID
					.col-sm-6
						.input-group
							input#game-id-1.form-control(type="text", ng-model="vm.game.id", placeholder="Common Abbreviation", ng-change="vm.game.data.idValidated = false", on-enter="vm.check()")
							span.input-group-addon(ng-class="{ transparent: !vm.game.data.idValidated }")
								+icon('check').small(ng-show="vm.game.data.idValid")
								+icon('times').small(ng-hide="vm.game.data.idValid")
						span.help-block Must be unique and contain only letters and dashes.
					.col-sm-3
						button.btn.btn-default.btn--width-med.pull-right(ng-click="vm.check()", ng-disabled="vm.game.data.idValidated")
							+icon('check').space-right
							| Check

				.alert.alert-danger.alert--shifted-up-2x(ng-show="vm.errors.id")
					.row
						.col-sm-9.col-sm-offset-3
							+icon('warning').shift-up.space-right
							| {{ vm.errors.id }}

				.form-group(ng-show="!vm.game.data.year", ng-class="{ error: vm.errors.year }")
					label.col-sm-3.control-label(for="year") Year
					.col-sm-3.col-md-2
						input#year.form-control(type="text", ng-model="vm.game.year")
					.col-sm-6.col-md-7
						span.help-block Release year of this game (no info on IPDB.org)

				.alert.alert-danger.alert--shifted-up-2x(ng-show="vm.errors.year && !vm.game.data.year")
					.row
						.col-sm-9.col-sm-offset-3
							+icon('warning').shift-up.space-right
							| {{ vm.errors.year }}

			.col-md-offset-2.col-md-8.col-sm-offset-1.col-sm-10(ng-show="vm.game.origin == 'recreation'")
				#game-info-panel.panel(ng-show="vm.game.data.fetched")
					.panel-heading
						h2.h--small.text-center {{ vm.game.title }}
					.panel-body
						dl.dl-horizontal.dl--centered
							dt Manufacturer
							dd {{ vm.game.manufacturer }}
							dt Year
							dd {{ vm.game.year }}
							dt
						hr.hr--margin-small(ng-show="vm.game.units || vm.game.ipdb.rating || vm.game.game_type || vm.game.model_number")
						dl(ng-show="vm.game.produced_units || vm.game.ipdb.rating || vm.game.type || vm.game.model_number").dl-horizontal.dl--centered
							dt(ng-show="vm.game.ipdb.rating") IPDB Rating
							dd(ng-show="vm.game.ipdb.rating") {{ vm.game.ipdb.rating }}
							dt(ng-show="vm.game.produced_units") Production
							dd(ng-show="vm.game.produced_units") {{ vm.game.produced_units | number }} units
							dt(ng-show="vm.game.game_type") Game Type
							dd(ng-show="vm.game.game_type") {{ vm.game.game_type | gametype }}
							dt(ng-show="vm.game.model_number") Model Number
							dd(ng-show="vm.game.model_number") {{ vm.game.model_number }}
						hr.hr--margin-small(ng-show="vm.game.designers || vm.game.artists")
						dl(ng-show="vm.game.designers || vm.game.artists").dl-horizontal.dl--centered
							dt(ng-show="vm.game.designers") Game Design
							dd(ng-show="vm.game.designers") {{ vm.game.designers.join(', ') }}
							dt(ng-show="vm.game.artists") Art design
							dd(ng-show="vm.game.artists") {{ vm.game.artists.join(', ') }}
				.panel.panel--fixed-height-300.panel--blank(ng-hide="vm.game.data.fetched")
					.panel-content
						+icon('ipdb').icon-ipdb--huge.space-right
						span INFO
						p.padder-top
							i Click "Fetch" to load data.


			+originalGameInfo()
			.clearfix

			+mediaUpload('4. Upload Media')

			hr
			button#game-reset-btn.btn.btn-default.btn-lg(ng-click="vm.reset()") Reset
			button#game-submit-btn.btn.btn-primary.btn-lg.pull-right(ng-click="vm.submit()", ng-disabled="vm.submitting") Add New Game
			.clearfix

			p
				br

	.col-sm-3.col--menu
		h1 Requests
		hr
		i(ng-show="vm.gameRequests.length == 0") No open game requests.
		span(ng-repeat="gameRequest in vm.gameRequests")
			.media.media--selectable(ng-click="vm.selectGameRequest(gameRequest)", ng-class="{ active: gameRequest.id === vm.game._game_request }")
				.media-left.media-middle
					img.img-avatar.img-avatar--sm(gravatar-src="gameRequest.created_by.gravatar_id", gravatar-default="retro", fallback-icon="user")
				.media-body
					b {{ gameRequest.ipdb_title }}
					br
					| {{ gameRequest.created_by.name || gameRequest.created_by.username }}, {{ gameRequest.created_at | timeAgo }}
			div(uib-collapse="gameRequest.id !== vm.game._game_request")
				p(ng-show="gameRequest.title")
					h5.h--primary.h--no-margin(ng-show="gameRequest.title") Title given by user
					| {{ gameRequest.title }}
				p(ng-show="gameRequest.notes")
					h5.h--primary.h--no-margin(ng-show="gameRequest.notes") Notes
					| {{ gameRequest.notes }}
				h5.h--primary.h--no-margin Message to user
				textarea.form-control(ng-model="denyMessage")
				button.btn.btn-hollow.padder-top.padder-bottom.pull-right(ng-disabled="!denyMessage", ng-click="vm.closeGameRequest(gameRequest, denyMessage)") Deny and close
				.clearfix

